---
const {class: className} = Astro.props;
const contacts = [
    {
        url: "https://www.facebook.com/sciencelab.project2022/",
        alt: "Facebook"
    },
    {
        url: "https://instagram.com",
        alt: "Instagram"
    }, 
    {
        url: "mailto:sciencelab.workspace@gmail.com",
        alt: "Email"
    }
];
---
<script>
    import QRCode from 'qrcode-svg';
    const refs = document.getElementsByClassName("reference");
    const qrcodeViewer = document.getElementById("qrcode__viewer");
    const qrcodeUrl = document.getElementById("qrcode__url");
    var style = getComputedStyle(document.body);
    let cached_qrcode = {};
    let lastRef = refs[0];
    const generateQR = (ref) => {
        if (!(ref instanceof HTMLElement)) return;
        const url = ref.dataset.url;
        const key = ref.dataset.key;
        qrcodeUrl.setAttribute("href", url);
        lastRef.removeAttribute("data-active");
        lastRef = ref;
        ref.dataset.active = "";
        if (key in cached_qrcode) {
            qrcodeViewer.innerHTML = cached_qrcode[key];
            return;
        }
        var qrGenerator = new QRCode({
            content: url,
            padding: 0,
            width: 256,
            height: 256,
            color: style.getPropertyValue('--color-background'),
            background: "transparent",
            ecl: "H",
            join: true,
            container: "svg-viewbox"
        });
        const qrCodeSvg = qrGenerator.svg();
        qrcodeViewer.innerHTML = qrCodeSvg;
        cached_qrcode[key] = qrCodeSvg;
    }
    for (let ref of refs) {
        ref.addEventListener("click", async () => generateQR(ref));
    }
    document.addEventListener("DOMContentLoaded", () => generateQR(lastRef))
</script>
<section class={className}>
    <h1 class="header">Contact</h1>
    <ul class="contact_refs">
        {contacts.map((contact, idx) => (
            <h2 class="reference" 
                data-url={contact.url}
                data-key={idx}
                data-active={!(idx)}>
                {contact.alt}
            </h2>
        ))}
    </ul>
    <div class="qrcode" lazy-animation lazy-once>
        <span>Scan me</span>
        <div id="qrcode__viewer">
        </div>
        <a id="qrcode__url" href="/">Or - click here</a>
    </div>
</section>

<style>
    section {
        display: grid;
        grid-template-areas:
            "h qr"
            "r qr";
        grid-template-columns: 1fr 30%;
        grid-template-rows: 1fr 70%;
        column-gap: 2rem;
    }
    .header {
        grid-area: h;
    }
    .contact_refs {
        grid-area: r;
        cursor: pointer;
        height: fit-content;
        width: 100%;
    }
    .contact_refs > * {
        display: flex;
        align-items: center;
        gap: 1rem;
        text-transform: uppercase;
        margin-bottom: 0.5rem;
        color: var(--color-fade);
        transition: all 0.2s ease-in-out;
    }
    .contact_refs > *::after {
        flex: 0;
        content: "";
        height: 3px;
        border-radius: 2px;
        background-color: var(--color-primary);
        transition: flex 0.2s ease-in-out;
    }
    .contact_refs > *[data-active]::after {
        flex: 1 0;
    }
    .contact_refs > *[data-active] {
        color: var(--color-text)
    }
    .qrcode {
        grid-area: qr;
        position: relative;
        padding: var(--padding-lr);
        padding-bottom: calc(var(--padding-lr) - 1em);
        background-color: var(--color-text);
        color: var(--color-background);
        border-radius: var(--radius-normal);
        font-size: calc(var(--fontsize-large) / 1.5);
        text-align: center;
        white-space: nowrap;
        aspect-ratio: 1;
        overflow: hidden;
        transition: all 0.3s ease-in-out;
    }
    .qrcode[lazy-animation] {
        transform: scale(0);
    }
    .qrcode > *:not(#qrcode__viewer) {
        position: absolute;
        transform: translate(-50%, -50%);
    }
    .qrcode > span {
        top: calc(var(--padding-lr) / 2);
    }
    .qrcode > a {
        top: calc(100% - (var(--padding-lr) / 2));
    }
    #qrcode__viewer {
        width: 100%;
        aspect-ratio: 1;
        overflow: hidden;
    }
</style>